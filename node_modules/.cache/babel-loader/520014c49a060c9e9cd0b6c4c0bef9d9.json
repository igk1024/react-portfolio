{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/safety/Documents/Coding-Bootcamp/react-portfolio/src/components/Header/Navigation/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { validateEmail } from \"../../../utils/helpers\";\n\nfunction ContactForm() {\n  _s();\n\n  // Hook\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const {\n    name,\n    email,\n    message\n  } = formState;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function handleChange(e) {\n    if (e.target.name === \"email\") {\n      const isValid = validateEmail(e.target.value);\n      console.log(isValid); // isValid conditional statement\n\n      if (!isValid) {\n        setErrorMessage(\"Your email is invalid.\");\n      } else {\n        setErrorMessage(\"\");\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage(\"\");\n      }\n    }\n\n    if (!errorMessage) {\n      setFormState({ ...formState,\n        [e.target.name]: e.target.value\n      });\n    } // We use the spread operator, ...formState, so we can retain the other key-value pairs in this object. Without the spread operator, the formState object would be overwritten to only contain the name: value key pair.\n\n  } //   console.log(formState);\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  } // JSX\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contact-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"contact\",\n          className: \"contact-title title\",\n          children: \"Contact Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"contact-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"name\",\n              placeholder: \"Name\",\n              type: \"text\",\n              defaultValue: name,\n              onBlur: handleChange,\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              placeholder: \"Email\",\n              type: \"email\",\n              defaultValue: email,\n              name: \"email\",\n              onBlur: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"message\",\n              htmlFor: \"message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"message\",\n              placeholder: \"Message\",\n              defaultValue: message,\n              onBlur: handleChange,\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"submit\",\n              className: \"submit\",\n              \"data-testid\": \"submit\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContactForm, \"JOvMT4FkD+NhVDL9jtK394ZhPJc=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/safety/Documents/Coding-Bootcamp/react-portfolio/src/components/Header/Navigation/Contact.js"],"names":["React","useState","validateEmail","ContactForm","formState","setFormState","name","email","message","errorMessage","setErrorMessage","handleChange","e","target","isValid","value","console","log","length","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { validateEmail } from \"../../../utils/helpers\";\n\nfunction ContactForm() {\n  // Hook\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const { name, email, message } = formState;\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function handleChange(e) {\n    if (e.target.name === \"email\") {\n      const isValid = validateEmail(e.target.value);\n      console.log(isValid);\n      // isValid conditional statement\n      if (!isValid) {\n        setErrorMessage(\"Your email is invalid.\");\n      } else {\n        setErrorMessage(\"\");\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage(\"\");\n      }\n    }\n\n    if (!errorMessage) {\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n    }\n\n    // We use the spread operator, ...formState, so we can retain the other key-value pairs in this object. Without the spread operator, the formState object would be overwritten to only contain the name: value key pair.\n  }\n\n  //   console.log(formState);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  }\n\n  // JSX\n  return (\n    <>\n      <section className=\"contact-wrapper\">\n<div>\n        <h3 data-testid=\"contact\" className=\"contact-title title\">\n        Contact Me\n        </h3>\n</div>\n       <div className=\"form-wrapper\">\n          <form id=\"contact-form\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"name\">Name</label>\n              <input\n                id=\"name\"\n                placeholder=\"Name\"\n                type=\"text\"\n                defaultValue={name}\n                onBlur={handleChange}\n                name=\"name\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                id=\"email\"\n                placeholder=\"Email\"\n                type=\"email\"\n                defaultValue={email}\n                name=\"email\"\n                onBlur={handleChange}\n              />\n            </div>\n            <div>\n              <label id=\"message\" htmlFor=\"message\"></label>\n              <textarea\n                name=\"message\"\n                placeholder=\"Message\"\n                defaultValue={message}\n                onBlur={handleChange}\n                rows=\"5\"\n              />\n            </div>\n            {errorMessage && (\n              <div>\n                <p className=\"error-text\">{errorMessage}</p>\n              </div>\n            )}\n            <div className=\"button-wrap\">\n              <button id=\"submit\" className=\"submit\" data-testid=\"submit\" type=\"submit\">\n                Submit\n              </button>\n            </div>\n          </form>\n          </div>\n          </section>\n      </>\n       \n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}